<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:webflow="http://www.springframework.org/schema/webflow-config"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc 
   http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/webflow-config 
      http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven enable-matrix-variables="true" />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   
   
   <context:component-scan base-package="com.springmvc.*" />
   <!-- 컨트롤러 안의 것은 자동 생성함 // springmvc 안에 있는 @로 annotation한 객체는 모두 다 자동 생성해준다. -->
   <!-- 클래스 이름 위에 @붙은 것들 찾아서 new함 그리고 객체를 자기가 들고 있음 //꺼내서 넣어주는건 @autowired 만났을때 자동으로 변수에 대입해주는거 -->
  
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  	<beans:property name="maxUploadSize" value="10240000"/>
  </beans:bean>
   
   <!-- 수동등록 방법 auto wired 안먹으니까 setter() 메서드가 꼭 필요하다.
   <beans:bean class="come.springmvc.controller.HomeController"/>
   <beans:bean id="bookRepositoryImpl" class="come.springmvc.controller.repository.BookRepositoryImpl"/>
  
   <beans:bean id="bookServiceImpl" class="com.springmvc.service.BookServiceImpl">
   		<beans:property name="bookRepository" ref="bookRepositoryImpl" />
   </beans:bean>
   
   <beans:bean class="com.springmvc.service.BookController">
   		<beans:property name="bookService" ref="bookServiceImpl" />
   </beans:bean>
   주입하기 위해 아래와같음 메서드 사용
   public void setBookService(BookService bookService){
   	this.bookService=bookService;}-->
   	

	
	
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="ko" />
	</beans:bean>
	
	 	<!-- 12.2.4 다국어 처리 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	     <beans:property name="basename" value="messages"/>
	     <beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>
	
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource" />
	</beans:bean>
	
	<beans:bean id="unitsInStockValidator" class="com.springmvc.validator.UnitsInStockValidator" />
	<beans:bean id="bookValidator" class="com.springmvc.validator.BookValidator">
		<beans:property name="springValidators">
			<beans:set>
				<beans:ref bean="unitsInStockValidator" />
			</beans:set>
		</beans:property>
	</beans:bean>
	
	<!-- 15.2.3 웹 플로우 환경 설정 -->
	<webflow:flow-registry id="flowRegistry">
		<webflow:flow-location path="/WEB-INF/flows/order/order-flow.xml" id="order"/>
	</webflow:flow-registry>
	
	<webflow:flow-executor id="flowExecutor" flow-registry="flowRegistry" />
	
	<beans:bean id="flowHandlerMapping" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<beans:property name="flowRegistry" ref="flowRegistry" />
	</beans:bean>
	
	<beans:bean id="flowHandlerAdapter" class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<beans:property name="flowExecutor" ref="flowExecutor" />
	</beans:bean>
	
	<!-- Tiles2 뷰 리졸버 -->
   <beans:bean id ="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
      <beans:property name="order" value="1" />
   </beans:bean>
   
   <!-- Tiles 설정 파일 -->
   <beans:bean id ="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions" value="/WEB-INF/tiles/tiles.xml" />
   </beans:bean>
   
   <!-- DataSOurce설정 및 JdbcTemplate 빈객체 등록 -->
   <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/springmvcDB?serverTimezone=UTC" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="1234" />
   </beans:bean>
   
   <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   		<beans:property name="dataSource" ref="dataSource" />
   </beans:bean>
   
</beans:beans>